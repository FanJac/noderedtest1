[
    {
        "id": "4f0b5201346bea24",
        "type": "tab",
        "label": "流程 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f8fe38de3b12e568",
        "type": "tab",
        "label": "流程 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f26dc9fc7fcb9f46",
        "type": "inject",
        "z": "4f0b5201346bea24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\":\"FanJac\"}",
        "payloadType": "json",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "c2d0071dea30861e"
            ]
        ]
    },
    {
        "id": "c2d0071dea30861e",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "c2187ee1da776a71",
        "type": "complete",
        "z": "4f0b5201346bea24",
        "name": "",
        "scope": [
            "f26dc9fc7fcb9f46"
        ],
        "uncaught": false,
        "x": 270,
        "y": 200,
        "wires": [
            [
                "df8ad52245b0be9f"
            ]
        ]
    },
    {
        "id": "b617c0717c1e79c3",
        "type": "catch",
        "z": "4f0b5201346bea24",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 280,
        "y": 300,
        "wires": [
            [
                "df8ad52245b0be9f"
            ]
        ]
    },
    {
        "id": "df8ad52245b0be9f",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 240,
        "wires": []
    },
    {
        "id": "35bd2efaca38fd37",
        "type": "inject",
        "z": "4f0b5201346bea24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "8cb8a7bbd1119e4f",
                "cb89f4433be798ad"
            ]
        ]
    },
    {
        "id": "d384474b15162dfd",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 460,
        "wires": []
    },
    {
        "id": "8cb8a7bbd1119e4f",
        "type": "function",
        "z": "4f0b5201346bea24",
        "name": "function 1",
        "func": "// generate random number\nvar min = 1;\nvar max = 10;\nvar a = Math.floor(Math.random() * (max + 1 - min)) + min;\n// set random number to message\nmsg.payload = a;\n// return message\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 440,
        "wires": [
            [
                "fd9c9f66b9a35d37",
                "977624a27c3f85c8"
            ]
        ]
    },
    {
        "id": "fd9c9f66b9a35d37",
        "type": "switch",
        "z": "4f0b5201346bea24",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "6",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 440,
        "wires": [
            [
                "5b44509a975c7af7"
            ],
            [
                "9369640c692ca737"
            ]
        ]
    },
    {
        "id": "5b44509a975c7af7",
        "type": "template",
        "z": "4f0b5201346bea24",
        "name": "Output Small",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The number is small: {{payload}} !",
        "output": "str",
        "x": 710,
        "y": 400,
        "wires": [
            [
                "d384474b15162dfd"
            ]
        ]
    },
    {
        "id": "9369640c692ca737",
        "type": "template",
        "z": "4f0b5201346bea24",
        "name": "Outpu Big",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The number is big: {{payload}} !",
        "output": "str",
        "x": 700,
        "y": 460,
        "wires": [
            [
                "d384474b15162dfd"
            ]
        ]
    },
    {
        "id": "977624a27c3f85c8",
        "type": "change",
        "z": "4f0b5201346bea24",
        "name": "Change to string",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "changed to string",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 620,
        "wires": [
            [
                "a1d381573adf32bd"
            ]
        ]
    },
    {
        "id": "cb89f4433be798ad",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 360,
        "wires": []
    },
    {
        "id": "a1d381573adf32bd",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 620,
        "wires": []
    },
    {
        "id": "04f7f0c84bd08614",
        "type": "http in",
        "z": "4f0b5201346bea24",
        "name": "",
        "url": "baidu",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 720,
        "wires": [
            [
                "deb8ffee55e25d03"
            ]
        ]
    },
    {
        "id": "5837c772e8cfa5a9",
        "type": "http response",
        "z": "4f0b5201346bea24",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 720,
        "wires": []
    },
    {
        "id": "bfa14e06186fd83a",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 800,
        "wires": []
    },
    {
        "id": "deb8ffee55e25d03",
        "type": "template",
        "z": "4f0b5201346bea24",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 570,
        "y": 720,
        "wires": [
            [
                "5837c772e8cfa5a9",
                "bfa14e06186fd83a"
            ]
        ]
    },
    {
        "id": "86937c5df34fb4fb",
        "type": "inject",
        "z": "4f0b5201346bea24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "addd",
        "payload": "wen",
        "payloadType": "str",
        "x": 340,
        "y": 660,
        "wires": [
            [
                "deb8ffee55e25d03"
            ]
        ]
    },
    {
        "id": "3a6bb25fedb181ae",
        "type": "exec",
        "z": "4f0b5201346bea24",
        "command": "ipconfig",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 920,
        "wires": [
            [
                "9557c754731b33c7"
            ],
            [
                "708f2814666d4252"
            ],
            [
                "3b849f39abe4eb55"
            ]
        ]
    },
    {
        "id": "730c565fb1b445ad",
        "type": "inject",
        "z": "4f0b5201346bea24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 920,
        "wires": [
            [
                "3a6bb25fedb181ae"
            ]
        ]
    },
    {
        "id": "8e2c2c686536005f",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 880,
        "wires": []
    },
    {
        "id": "708f2814666d4252",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "err output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 920,
        "wires": []
    },
    {
        "id": "3b849f39abe4eb55",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "return",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 960,
        "wires": []
    },
    {
        "id": "9557c754731b33c7",
        "type": "function",
        "z": "4f0b5201346bea24",
        "name": "function 2",
        "func": "// 检查 msg.payload 是否是 Buffer\nif (Buffer.isBuffer(msg.payload)) {\n    msg.payload = msg.payload.toString('utf8'); // 转为 UTF-8 字符串\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 880,
        "wires": [
            [
                "8e2c2c686536005f"
            ]
        ]
    },
    {
        "id": "84d6c210079892fd",
        "type": "inject",
        "z": "4f0b5201346bea24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1120,
        "wires": [
            [
                "87efae5157840419"
            ]
        ]
    },
    {
        "id": "87efae5157840419",
        "type": "http request",
        "z": "4f0b5201346bea24",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?lat=25&lon=103&appid=bb5f0c26494994aefc964440c6ae2401",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 460,
        "y": 1120,
        "wires": [
            [
                "3f0b818ee362d390",
                "bc0f0bc36b799aa8"
            ]
        ]
    },
    {
        "id": "bc0f0bc36b799aa8",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3f0b818ee362d390",
        "type": "json",
        "z": "4f0b5201346bea24",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 1200,
        "wires": [
            [
                "916c683b0e8f0eb3"
            ]
        ]
    },
    {
        "id": "916c683b0e8f0eb3",
        "type": "debug",
        "z": "4f0b5201346bea24",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1240,
        "wires": []
    },
    {
        "id": "0c9abf959b262eee",
        "type": "http in",
        "z": "f8fe38de3b12e568",
        "name": "",
        "url": "/web",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "23b1b6c8226a6f93"
            ]
        ]
    },
    {
        "id": "bcbf48d6e92b45d1",
        "type": "http response",
        "z": "f8fe38de3b12e568",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "23b1b6c8226a6f93",
        "type": "template",
        "z": "f8fe38de3b12e568",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n\n<head>\n    <title>Node-RED Web sample</title>\n</head>\n\n<body>\n    <h1>Hello Node-RED!!</h1>\n    <h2>Menu 1</h2>\n    <p>It is Node-RED sample webpage.</p>\n    <hr>\n    <h2>Menu 2</h2>\n    <p>It is Node-RED sample webpage.</p>\n</body>\n\n</html>",
        "output": "str",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "bcbf48d6e92b45d1"
            ]
        ]
    }
]